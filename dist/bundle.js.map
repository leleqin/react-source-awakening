{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://react-source-awakening/./src/constants/index.js","webpack://react-source-awakening/./src/react/Component/index.js","webpack://react-source-awakening/./src/react/CreateElement/index.js","webpack://react-source-awakening/./src/react/DOM/createDOMElement.js","webpack://react-source-awakening/./src/react/DOM/index.js","webpack://react-source-awakening/./src/react/DOM/updateNodeElement.js","webpack://react-source-awakening/./src/react/Misc/Arrified/index.js","webpack://react-source-awakening/./src/react/Misc/CreateTaskQueue/index.js","webpack://react-source-awakening/./src/react/Misc/createReactInstance/index.js","webpack://react-source-awakening/./src/react/Misc/createStateNode/index.js","webpack://react-source-awakening/./src/react/Misc/getTag/index.js","webpack://react-source-awakening/./src/react/Misc/index.js","webpack://react-source-awakening/./src/react/index.js","webpack://react-source-awakening/./src/react/reconciliation/index.js","webpack://react-source-awakening/webpack/bootstrap","webpack://react-source-awakening/webpack/runtime/define property getters","webpack://react-source-awakening/webpack/runtime/hasOwnProperty shorthand","webpack://react-source-awakening/webpack/runtime/make namespace object","webpack://react-source-awakening/./src/index.js"],"sourcesContent":["export const FIBER_TAG = {\r\n  ROOT: \"host_root\",\r\n  COMPONENT: \"host_component\",\r\n  CLASS_COMPONENT: \"class_component\",\r\n  FUNCTION_COMPONENT: \"function_component\",\r\n};\r\n\r\nexport const EFFECT_TAG = {\r\n  PLACEMENT: \"placement\",\r\n  UPDATE: \"update\",\r\n  DELETE: \"delete\",\r\n};\r\n\r\nexport const VIRTUAL_DOM_TYPE = {\r\n  TEXT: \"text\",\r\n};\r\n","export class Component {\r\n  constructor(props) {\r\n    this.props = props;\r\n  }\r\n}\r\n","/**\r\n * @name 创建 Virtual DOM\r\n * @param {string} type 元素类型\r\n * @param {object | null} props 元素属性\r\n * @param  {createElement[]} children 元素的子元素\r\n * @returns {object} Virtual DOM\r\n *\r\n *  1. 处理文本节点结构，需要返回 Virtual DOM 结构\r\n *  2. 处理逻辑节点，刨除 bool 节点和 null 节点\r\n *  3. 通过 props 的 children 属性拿到子节点，将 children 放入 props 中\r\n */\r\nexport default function createElement(type, props, ...children) {\r\n  const childElement = [].concat(...children).reduce((result, child) => {\r\n    // 刨除 bool 节点和 null 节点\r\n    if (child !== false && child !== true && child !== null) {\r\n      if (child instanceof Object) result.push(child);\r\n      else result.push(createElement(\"text\", { textContent: child }));\r\n    }\r\n    return result;\r\n  }, []);\r\n  return {\r\n    type,\r\n    props: Object.assign({ children: childElement }, props),\r\n  };\r\n  // {\r\n  //   type: \"div\",\r\n  //   props: null,\r\n  //   children: [{type: 'text', props: {textContent: \"Hello\"}}]\r\n  // }\r\n}\r\n","import { VIRTUAL_DOM_TYPE } from \"../../constants\";\r\nimport updateNodeElement from \"./updateNodeElement\";\r\n\r\nconst createDOMElement = (virtualDOM) => {\r\n  let newElement = null;\r\n  if (virtualDOM.type === VIRTUAL_DOM_TYPE.TEXT) {\r\n    // 文本节点\r\n    newElement = document.createTextNode(virtualDOM.props.textContent);\r\n  } else {\r\n    // 元素节点\r\n    newElement = document.createElement(virtualDOM.type);\r\n    updateNodeElement(newElement, virtualDOM);\r\n  }\r\n  return newElement;\r\n};\r\n\r\nexport default createDOMElement;\r\n","export { default as createDOMElement } from \"./createDOMElement\";\r\nexport { default as updateNodeElement } from \"./updateNodeElement\";\r\n","/**\r\n * @name 给 DOM 元素设置属性\r\n * @param {object} newElement 新的 DOM 元素\r\n * @param {object} virtualDOM 新的 virtual DOM\r\n * @param {object} oldVirtualDOM 旧的 virtual DOM\r\n */\r\nexport default function updateNodeElement(\r\n  newElement,\r\n  virtualDOM,\r\n  oldVirtualDOM = {}\r\n) {\r\n  // 获取节点对应的属性对象\r\n  const newProps = virtualDOM.props || {};\r\n  const oldProps = oldVirtualDOM.props || {};\r\n\r\n  /**\r\n   * 文本节点处理\r\n   */\r\n  if (virtualDOM.type === \"text\") {\r\n    if (newProps.textContent !== oldProps.textContent) {\r\n      // 处理父节点类型更新的情况\r\n      if (virtualDOM.parent.type !== oldVirtualDOM.parent.type) {\r\n        virtualDOM.parent.stateNode.appendChild(\r\n          document.createTextNode(newProps.textContent)\r\n        );\r\n      } else {\r\n        // 父节点相同，替换文本\r\n        virtualDOM.parent.stateNode.replaceChild(\r\n          document.createTextNode(newProps.textContent),\r\n          oldVirtualDOM.stateNode\r\n        );\r\n      }\r\n    }\r\n    return;\r\n  }\r\n\r\n  Object.keys(newProps).forEach((propName) => {\r\n    // 获取属性值\r\n    const newPropsValue = newProps[propName];\r\n    const oldPropsValue = oldProps[propName];\r\n    if (newPropsValue !== oldPropsValue) {\r\n      // 判断属性是否为事件\r\n      if (propName.slice(0, 2) === \"on\") {\r\n        const eventName = propName.toLowerCase().slice(2);\r\n        newElement.addEventListener(eventName, newPropsValue);\r\n        if (oldPropsValue) {\r\n          newElement.removeEventListener(eventName, oldPropsValue);\r\n        }\r\n      } else if (propName === \"value\" || propName === \"checked\") {\r\n        newElement[propName] = newPropsValue;\r\n      } else if (propName !== \"children\") {\r\n        // 刨除 children 属性\r\n        if (propName === \"className\") {\r\n          newElement.setAttribute(\"class\", newPropsValue);\r\n        } else {\r\n          newElement.setAttribute(propName, newPropsValue);\r\n        }\r\n      }\r\n    }\r\n  });\r\n\r\n  /** 属性删除 */\r\n  Object.keys(oldProps).forEach((propsName) => {\r\n    // 获取属性值\r\n    const newPropsValue = newProps[propsName];\r\n    const oldPropsValue = oldProps[propsName];\r\n    // 属性被删除\r\n    if (!newPropsValue) {\r\n      if (propsName.slice(0, 2) === \"on\") {\r\n        const eventName = propsName.toLowerCase().slice(2);\r\n        newElement.removeEventListener(eventName, oldPropsValue);\r\n      } else if (propsName !== \"children\") {\r\n        newElement.removeAttribute(propsName);\r\n      }\r\n    }\r\n  });\r\n}\r\n","const arrified = (arg) => (Array.isArray(arg) ? arg : [arg]);\r\n\r\nexport default arrified;\r\n","const createTaskQueue = () => {\r\n  const taskQueue = [];\r\n\r\n  return {\r\n    /**\r\n     * @name 添加任务\r\n     * @param {object} item\r\n     */\r\n    push: (item) => taskQueue.push(item),\r\n\r\n    pop: () => taskQueue.shift(),\r\n    /**\r\n     * 判断当前任务队列是否为空\r\n     */\r\n    isEmpty: () => taskQueue.length === 0,\r\n  };\r\n};\r\n\r\nexport default createTaskQueue;\r\n","import { FIBER_TAG } from \"../../../constants\";\r\n\r\nexport const createReactInstance = (fiber) => {\r\n  let instance = null;\r\n  if (fiber.tag === FIBER_TAG.CLASS_COMPONENT) {\r\n    // 类组件, type 函数中存储的是构造函数\r\n    instance = new fiber.type(fiber.props);\r\n  } else {\r\n    // 函数组件\r\n    instance = fiber.type;\r\n  }\r\n\r\n  return instance;\r\n};\r\n","import { FIBER_TAG } from \"../../../constants\";\r\nimport { createDOMElement } from \"../../DOM\";\r\nimport { createReactInstance } from \"../createReactInstance\";\r\n\r\nconst createStateNode = (fiber) => {\r\n  if (fiber.tag === FIBER_TAG.COMPONENT) {\r\n    return createDOMElement(fiber);\r\n  } else {\r\n    // 区别类组件和函数组件\r\n    return createReactInstance(fiber);\r\n  }\r\n};\r\n\r\nexport default createStateNode;\r\n","import { FIBER_TAG } from \"../../../constants\";\r\nimport { Component } from \"../../Component\";\r\n\r\nconst getTag = (virtualDOM) => {\r\n  // 普通节点\r\n  if (typeof virtualDOM.type === \"string\") {\r\n    return FIBER_TAG.COMPONENT;\r\n  } else if (Object.getPrototypeOf(virtualDOM.type) === Component) {\r\n    // 类组件节点\r\n    return FIBER_TAG.CLASS_COMPONENT;\r\n  } else {\r\n    // 函数组件\r\n    return FIBER_TAG.FUNCTION_COMPONENT;\r\n  }\r\n};\r\n\r\nexport default getTag;\r\n","export { default as createTaskQueue } from \"./CreateTaskQueue\";\r\nexport { default as arrified } from \"./Arrified\";\r\nexport { default as createStateNode } from \"./createStateNode\";\r\nexport { default as getTag } from \"./getTag\";\r\n","import createElement from \"./CreateElement\";\r\n\r\nexport { render } from \"./reconciliation\";\r\nexport { Component } from \"./Component\";\r\n\r\nexport default {\r\n  createElement,\r\n};\r\n","/**\r\n *\r\n * @param {*} element\r\n * @param {*} dom\r\n *\r\n * 1. 向任务队列中添加任务\r\n *  - 任务：通过 Virtual DOM 构建 Fiber 对象\r\n * 2. 指定在浏览器空闲时间执行 requestIdleCallback\r\n *  - a. 执行任务\r\n *  - b. 判断是否任务中断或者 taskQueue 有任务，再次使浏览器在空闲时间执行任务\r\n */\r\n\r\nimport { EFFECT_TAG, FIBER_TAG } from \"../../constants\";\r\nimport { updateNodeElement } from \"../DOM\";\r\nimport { createTaskQueue, arrified, createStateNode, getTag } from \"../Misc\";\r\n\r\nconst taskQueue = createTaskQueue();\r\n\r\n// 子任务\r\nlet subTask = null;\r\n\r\n// 拿到最外层的 fiber。为后面拿到 effects 循环构建真实 DOM 做准备\r\nlet pendingCommit = null;\r\n\r\n/**\r\n * @name 生成真实 DOM 对象\r\n * @param {object} fiber **根节点** 的 fiber 对象\r\n */\r\nconst commitAllWork = (fiber) => {\r\n  /**\r\n   * 遍历所有 fiber 对象，即 effects 数组。构建真实 DOM 对象\r\n   *\r\n   * 1. 普通节点\r\n   * 最外层的 fiber 对象包含所有元素的 fiber 对象\r\n   *\r\n   * 2. 类组件节点\r\n   * 类组件本身无法追加真实 DOM。需要找到类组件的普通父级，\r\n   * 往 DOM 元素中追加类组件返回的内容\r\n   *\r\n   * 3. 函数组件节点\r\n   * 同类组件，找到函数组件的普通父级\r\n   */\r\n  fiber.effects.forEach((f) => {\r\n    if (f.effectTag === EFFECT_TAG.DELETE) {\r\n      f.parent.stateNode.removeChild(f.stateNode);\r\n    } else if (f.effectTag === EFFECT_TAG.UPDATE) {\r\n      /**\r\n       * 判断是不是同一种类型节点\r\n       */\r\n      if (f.type === f.alternate.type) {\r\n        /**\r\n         * 节点类型相同，更新 DOM\r\n         * @param 要更新的 DOM 节点\r\n         * @param 新的 virtual DOM\r\n         * @param 旧的 virtual DOM\r\n         */\r\n        updateNodeElement(f.stateNode, f, f.alternate);\r\n      } else {\r\n        /**\r\n         * 节点类型不同，直接替换\r\n         * @param 新节点 stateNode\r\n         * @param 旧节点的 stateNode\r\n         */\r\n        f.parent.stateNode.replaceChild(f.stateNode, f.alternate.stateNode);\r\n      }\r\n    } else if (f.effectTag === EFFECT_TAG.PLACEMENT) {\r\n      /**\r\n       * 当前要追加的子节点\r\n       */\r\n      let tempFiber = f;\r\n      /**\r\n       * 当前要追加的子节点的父级\r\n       */\r\n      let parentFiber = f.parent;\r\n      while (\r\n        parentFiber.tag === FIBER_TAG.CLASS_COMPONENT ||\r\n        parentFiber.tag === FIBER_TAG.FUNCTION_COMPONENT\r\n      ) {\r\n        parentFiber = parentFiber.parent;\r\n      }\r\n      /**\r\n       * 如果子节点是普通节点，找到父级，将子节点追加到父级中\r\n       */\r\n      if (tempFiber.tag === FIBER_TAG.COMPONENT) {\r\n        parentFiber.stateNode.append(tempFiber.stateNode);\r\n      }\r\n    }\r\n  });\r\n\r\n  /**\r\n   * 备份旧的 fiber 对象，以便后面更新使用\r\n   */\r\n  fiber.stateNode.__rootFiberContainer = fiber;\r\n};\r\n\r\nconst getFirstTask = () => {\r\n  // 从任务队列中获取任务\r\n  const task = taskQueue.pop();\r\n\r\n  // 获取根节点，返回根节点的 fiber 对象\r\n  return {\r\n    props: task.props,\r\n    stateNode: task.dom,\r\n    tag: FIBER_TAG.ROOT,\r\n    effects: [],\r\n    child: null,\r\n    // 备份 fiber 对象\r\n    alternate: task.dom.__rootFiberContainer,\r\n  };\r\n};\r\n\r\nconst reconcileChildren = (fiber, children) => {\r\n  /**\r\n   * children 可能是数组 | 对象\r\n   * 将 children 转换为数组\r\n   */\r\n  const arrifiedChildren = arrified(children);\r\n  // 拿到数组中的 virtual DOM 转化为 fiber\r\n  let index = 0;\r\n  let childrenLength = arrifiedChildren.length;\r\n  let element = null;\r\n  let newFiber = null;\r\n  // 临时存储，用来记录上一个 fiber\r\n  let preFiber = null;\r\n\r\n  /**\r\n   * 备份 fiber\r\n   * fiber.alternate.child 是 children 数组中的第一个子节点的备份节点\r\n   * children 数组中第一个是 child，其余的是 sibling 节点\r\n   */\r\n  let alternate = null;\r\n  if (fiber.alternate && fiber.alternate.child) {\r\n    alternate = fiber.alternate.child;\r\n  }\r\n\r\n  while (index < childrenLength || alternate) {\r\n    element = arrifiedChildren[index];\r\n\r\n    if (!element && alternate) {\r\n      // 删除节点\r\n      // 备份属性的 effectTag 设置为 delete\r\n      alternate.effectTag = EFFECT_TAG.DELETE;\r\n      fiber.effects.push(alternate);\r\n    } else if (element && alternate) {\r\n      // 更新节点\r\n      newFiber = {\r\n        type: element.type,\r\n        props: element.props,\r\n        tag: getTag(element),\r\n        effects: [],\r\n        effectTag: EFFECT_TAG.UPDATE,\r\n        parent: fiber,\r\n        alternate,\r\n      };\r\n      if (element.type === alternate.type) {\r\n        /**\r\n         * 类型相同\r\n         * 旧的 stateNode 直接赋值给新的 stateNode\r\n         */\r\n        newFiber.stateNode = alternate.stateNode;\r\n      } else {\r\n        /**\r\n         * 类型不同\r\n         * 直接创建节点\r\n         */\r\n        newFiber.stateNode = createStateNode(newFiber);\r\n      }\r\n    } else if (element && !alternate) {\r\n      // 新建节点\r\n      newFiber = {\r\n        type: element.type,\r\n        props: element.props,\r\n        tag: getTag(element),\r\n        effects: [],\r\n        effectTag: EFFECT_TAG.PLACEMENT,\r\n        parent: fiber,\r\n      };\r\n\r\n      /**\r\n       * 为 fiber 对象添加 DOM 对象或组件实例对象\r\n       * 若是普通节点 stateNode 是 DOM 对象\r\n       * 若是类组件 stateNode 是组件实例对象\r\n       */\r\n      newFiber.stateNode = createStateNode(newFiber);\r\n    }\r\n\r\n    // 判断当前 fiber 是上一个 fiber 的 parent 还是 sibling\r\n    if (index === 0) {\r\n      fiber.child = newFiber;\r\n    } else if (element) {\r\n      // 如果不是第一个 child，说明其他的 child 是上一个 child 的 sibling\r\n      preFiber.sibling = newFiber;\r\n    }\r\n\r\n    // 更新备份节点，兄弟节点备份\r\n    if (alternate && alternate.sibling) {\r\n      alternate = alternate.sibling;\r\n    } else {\r\n      alternate = null;\r\n    }\r\n\r\n    preFiber = newFiber;\r\n\r\n    index++;\r\n  }\r\n};\r\n\r\nconst executeTask = (fiber) => {\r\n  /**\r\n   * 构建子级 fiber 对象\r\n   */\r\n  if (fiber.tag === FIBER_TAG.CLASS_COMPONENT) {\r\n    // 类组件，children 是 render 返回的元素\r\n    reconcileChildren(fiber, fiber.stateNode.render());\r\n  } else if (fiber.tag === FIBER_TAG.FUNCTION_COMPONENT) {\r\n    // 函数组件，children 是 render 返回的元素\r\n    reconcileChildren(fiber, fiber.stateNode(fiber.props));\r\n  } else {\r\n    reconcileChildren(fiber, fiber.props.children);\r\n  }\r\n  /**\r\n   * 如果子级存在 返回子级\r\n   * 将这个子级当作父级 构建这个父级下的子级\r\n   * 一直递归下去，能得到所有左侧节点的 fiber 对象\r\n   */\r\n  if (fiber.child) {\r\n    return fiber.child;\r\n  }\r\n\r\n  /**\r\n   * 如果有同级 返回同级\r\n   * 如果有父级 退回到父级,再看父级有没有同级\r\n   * 保证每个节点都找到了\r\n   */\r\n  let currentExecuterFiber = fiber;\r\n  while (currentExecuterFiber.parent) {\r\n    /**\r\n     * 使最外层的 effects 存储所有 fiber 对象\r\n     */\r\n    currentExecuterFiber.parent.effects =\r\n      currentExecuterFiber.parent.effects.concat(\r\n        currentExecuterFiber.effects.concat([currentExecuterFiber])\r\n      );\r\n\r\n    if (currentExecuterFiber.sibling) {\r\n      return currentExecuterFiber.sibling;\r\n    }\r\n    currentExecuterFiber = currentExecuterFiber.parent;\r\n  }\r\n\r\n  // 最外层 fiber 对象\r\n  pendingCommit = currentExecuterFiber;\r\n};\r\n\r\nconst workLoop = (deadline) => {\r\n  if (!subTask) {\r\n    // 若当前无任务，获取执行任务\r\n    subTask = getFirstTask();\r\n  }\r\n\r\n  // 当有任务并且空闲时间大于 1 ms 时执行任务\r\n  while (subTask && deadline.timeRemaining() > 1) {\r\n    // 执行任务 并返回一个新任务 while 执行\r\n    subTask = executeTask(subTask);\r\n  }\r\n\r\n  /**\r\n   * 判断\r\n   */\r\n  if (pendingCommit) {\r\n    commitAllWork(pendingCommit);\r\n  }\r\n};\r\n\r\nconst performTask = (deadline) => {\r\n  // 执行任务队列\r\n  workLoop(deadline);\r\n\r\n  /**\r\n   * 判断任务是否存在\r\n   * 当任务被中断时，需要重新判断执行的任务是否有中断\r\n   * 或者 taskQueue 有任务\r\n   * 告知浏览器在空闲时间继续执行\r\n   */\r\n  if (subTask || !taskQueue.isEmpty()) {\r\n    requestIdleCallback(performTask);\r\n  }\r\n};\r\n\r\nexport const render = (element, dom) => {\r\n  // 构建 Fiber 对象，从顶层开始\r\n  taskQueue.push({\r\n    dom,\r\n    props: { children: element },\r\n  });\r\n\r\n  // 浏览器空闲时间执行任务\r\n  requestIdleCallback(performTask);\r\n};\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import React, { render, Component } from \"./react\";\r\n\r\nconst root = document.getElementById(\"root\");\r\n\r\nconst jsx = (\r\n  <div>\r\n    <p>Hello React</p>\r\n    <p>Hi fiber</p>\r\n  </div>\r\n);\r\n\r\nrender(jsx, root);\r\n\r\n// 模拟更新操作\r\nsetTimeout(() => {\r\n  const jsxUpdate = (\r\n    <div>\r\n      {/* <div>更新</div> */}\r\n      <p>Hi fiber</p>\r\n    </div>\r\n  );\r\n  render(jsxUpdate, root);\r\n}, 2000);\r\n\r\n/**\r\n * 渲染类组件\r\n */\r\nclass Grating extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return <div>{this.props.title}hahaha</div>;\r\n  }\r\n}\r\n\r\n// render(<Grating title=\"hello\" />, root);\r\n\r\n/**\r\n * 渲染函数组件\r\n */\r\n\r\nfunction FnComponent(props) {\r\n  return <div>{props.title}函数组件</div>;\r\n}\r\n\r\n// render(<FnComponent title=\"hello\" />, root);\r\n"],"names":["FIBER_TAG","ROOT","COMPONENT","CLASS_COMPONENT","FUNCTION_COMPONENT","EFFECT_TAG","PLACEMENT","UPDATE","DELETE","VIRTUAL_DOM_TYPE","TEXT","Component","_createClass","props","_classCallCheck","createElement","type","_ref","_len","arguments","length","children","Array","_key","childElement","concat","apply","reduce","result","child","Object","push","textContent","assign","updateNodeElement","createDOMElement","virtualDOM","newElement","document","createTextNode","default","oldVirtualDOM","undefined","newProps","oldProps","parent","stateNode","appendChild","replaceChild","keys","forEach","propName","newPropsValue","oldPropsValue","slice","eventName","toLowerCase","addEventListener","removeEventListener","setAttribute","propsName","removeAttribute","arrified","arg","isArray","createTaskQueue","taskQueue","item","pop","shift","isEmpty","createReactInstance","fiber","instance","tag","createStateNode","getTag","getPrototypeOf","render","subTask","pendingCommit","commitAllWork","effects","f","effectTag","removeChild","alternate","tempFiber","parentFiber","append","__rootFiberContainer","getFirstTask","task","dom","reconcileChildren","arrifiedChildren","index","childrenLength","element","newFiber","preFiber","sibling","executeTask","currentExecuterFiber","workLoop","deadline","timeRemaining","performTask","requestIdleCallback","React","root","getElementById","jsx","setTimeout","jsxUpdate","Grating","_Component","_callSuper","_inherits","key","value","title","FnComponent"],"sourceRoot":""}